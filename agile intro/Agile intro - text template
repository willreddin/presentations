Agile and stuff: A very brief intro...
===

So in 2001 some software types got together and created some priniciples for how to build software 

===

this lead to:

http://agilemanifesto.org/principles.html

1. Our highest priority is to satisfy the customer
through early and continuous delivery
of valuable software.

2. Welcome changing requirements, even late in 
development. Agile processes harness change for 
the customer's competitive advantage.

3. Deliver working software frequently, from a 
couple of weeks to a couple of months, with a 
preference to the shorter timescale.

4. Business people and developers must work 
together daily throughout the project.

5. Build projects around motivated individuals. 
Give them the environment and support they need, 
and trust them to get the job done.

6. The most efficient and effective method of 
conveying information to and within a development 
team is face-to-face conversation.

7. Working software is the primary measure of progress.

8. Agile processes promote sustainable development. 
The sponsors, developers, and users should be able 
to maintain a constant pace indefinitely.

9. Continuous attention to technical excellence 
and good design enhances agility.

10. Simplicity--the art of maximizing the amount 
of work not done--is essential.

11. The best architectures, requirements, and designs 
emerge from self-organizing teams.

12. At regular intervals, the team reflects on how 
to become more effective, then tunes and adjusts 
its behavior accordingly.

===

Which can be neatly summarised by:

===

Agile manifesto
---

Individuals and interactions over processes and tools

Working software over comprehensive documentation

Customer collaboration over contract negotiation

Responding to change over following a plan

That is, while there is value in the items on
the right, we value the items on the left more.

http://www.agilemanifesto.org/

===

If your doing these things you doing agile

===

back to the principles (principles slide goes here)

===

There's some common themes here:

 - Transparency
 - Inspection
 - Adaption

===

So what does that mean in practice?

(lots of agile methedologies)

pic with scrum, dsdm

===

Let's look at scrum:

===

But first Old Project management: a look at a gantt chart

===

What risk looks like a comparison

===

and a quick scrum process

===





